let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
let s:shortmess_save = &shortmess
if &shortmess =~ 'A'
  set shortmess=aoOA
else
  set shortmess=aoO
endif
badd +18 ~/hello_py.qmd
badd +0 term://~//122286:quarto\ preview\ \'/home/tomishing/hello_py.qmd\'
badd +28 ~/hello_r01.qmd
badd +0 term://~//122703:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\'
badd +0 term://~//122992:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\'
badd +0 term://~//123586:quarto\ preview\ \'/home/tomishing/hello_py.qmd\'
badd +0 term://~//125681:quarto\ preview\ \'/home/tomishing/hello_py.qmd\'
badd +0 term://~//126042:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\'
argglobal
%argdel
$argadd hello_py.qmd
set stal=2
tabnew +setlocal\ bufhidden=wipe
tabnew +setlocal\ bufhidden=wipe
tabrewind
edit ~/hello_r01.qmd
let s:save_splitbelow = &splitbelow
let s:save_splitright = &splitright
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
let &splitbelow = s:save_splitbelow
let &splitright = s:save_splitright
wincmd t
let s:save_winminheight = &winminheight
let s:save_winminwidth = &winminwidth
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
wincmd =
argglobal
balt ~/hello_py.qmd
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 28 - ((27 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 28
normal! 07|
lcd ~
wincmd w
argglobal
if bufexists(fnamemodify("~/hello_py.qmd", ":p")) | buffer ~/hello_py.qmd | else | edit ~/hello_py.qmd | endif
if &buftype ==# 'terminal'
  silent file ~/hello_py.qmd
endif
balt ~/hello_r01.qmd
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 18 - ((17 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 18
normal! 023|
lcd ~
wincmd w
wincmd =
tabnext
argglobal
if bufexists(fnamemodify("term://~//126042:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\'", ":p")) | buffer term://~//126042:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\' | else | edit term://~//126042:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\' | endif
if &buftype ==# 'terminal'
  silent file term://~//126042:quarto\ preview\ \'/home/tomishing/hello_r01.qmd\'
endif
balt ~/hello_r01.qmd
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd ~
tabnext
argglobal
if bufexists(fnamemodify("term://~//125681:quarto\ preview\ \'/home/tomishing/hello_py.qmd\'", ":p")) | buffer term://~//125681:quarto\ preview\ \'/home/tomishing/hello_py.qmd\' | else | edit term://~//125681:quarto\ preview\ \'/home/tomishing/hello_py.qmd\' | endif
if &buftype ==# 'terminal'
  silent file term://~//125681:quarto\ preview\ \'/home/tomishing/hello_py.qmd\'
endif
balt ~/hello_py.qmd
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=1
setlocal fml=1
setlocal fdn=20
setlocal fen
let s:l = 1 - ((0 * winheight(0) + 23) / 47)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 1
normal! 0
lcd ~
tabnext 1
set stal=1
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20
let &shortmess = s:shortmess_save
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
nohlsearch
doautoall SessionLoadPost
let g:this_fzf_session =v:this_session
unlet SessionLoad
" vim: set ft=vim :
